/* Define Color Palette */
:root {
  --primaryA: rgb(50, 200, 12);
  --primaryB: rgb(248, 168, 3);
  --primaryC: rgb(50, 75, 225);
  --lightA:   rgb(232, 235, 236);
  --lightB:   rgb(208, 215, 236);
  --lightC:   rgb(197, 207, 236);
  --darkA:    #112233;
  --darkB:    rgb(81,  84,  96);
  --darkC:    #020509;

  --textA: rgb(79,119,153);
  --textB: rgb(100, 30, 55);
  --textC: rgb(200, 200, 100);
}
.colorBox {
  width: 100px;
  height: 100px;
  border: 1px solid #ABC;
  border-radius: 5%;
  margin: 10px;
}
.lightA {background-color: var(--lightA)}
.lightB {background-color: var(--lightB)}
.lightC {background-color: var(--lightC)}
.midA {background-color:   var(--primaryA)}
.midB {background-color:   var(--primaryB)}
.midC {background-color:   var(--primaryC)}
.darkA {background-color:  var(--darkA)}
.darkB {background-color:  var(--darkB)}
.darkC {background-color:  var(--darkC)}

/* Remove pre-existing margins/padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Fit the page to the screen */
html, body, main {
  width: 1300px; /* Desktop Resolution */
  min-height: 100vh;
  background: #020509;
  margin: 0 auto; /* Center the page */
}

/**********************************/
/* Bootstrap Edits                */
/**********************************/
/* Sizing of input-group-prepend was off, this fixed it */
.input-group { align-self: flex-start; }
.input-group-text { background: linear-gradient(0deg, #e9ecef, #e9ecef, #DDD, #e9ecef) !important; }
/* Overwrite default bootstrap alert styles */
.alert-error {
  color: #A94442;
  background-color: #F2DEDE;
  border-color: #EBCCD1;
}
.alert-success_msg {
  color: #3C763D;
  background-color: #DFF0D8;
  border-color: #D6E9C6;
}
/* Bootstrap messin with mah labels */
label { margin: 0 !important; }


/**********************************/
/* Desktop Layouts (Grids/Flexes) */
/**********************************/

/* Note: You have a different grid for each page of information,
 It would be better to have 2-3 templates that page items can fall into rather than plotting out each individually.
 This would improve readability by having a set format for most information.
 Don't start typing, draw out what layouts you'd like to use first.
 List the info and charts all pages will have and break them down into groupable parts. */

/** Website's General Layout **/
.siteGrid {
  display: grid;
  grid-gap: 15px 15px;
  /* TODO: make the footer row auto once it has stuff in it */
  grid-template-rows: 100px 1fr 50px;
  grid-template-columns: 1fr;
  grid-template-areas:
    "navigation"
    "page"
    "footer";
}
nav {
  grid-area: navigation;

}
.page {
  grid-area: page;
  margin-right: 10px;
}
footer {
  grid-area: footer;
  margin: 0 5px;

}

/* */
.loginLayout {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto;
  grid-gap: 10px 20px;
  grid-template-areas:
  "usernameInput loginButton"
  "passwordInput signupButton";
}
.usernameInput { grid-area: usernameInput; }
.passwordInput { grid-area: passwordInput; }
.loginButton { grid-area: loginButton; }
.signupButton { grid-area: signupButton; }

/** Home Page Layout **/
.homePageGrid {
  display: grid;
  grid-template-columns: 800px 1fr;
  grid-template-rows: 500px 1fr;
  grid-template-areas:
    "heroShot heroShot"
    "siteIntro reptileInfo";
  padding: 10px;
  grid-gap: 20px;
}
.heroShotArea {grid-area: heroShot;}
.siteIntroArea {
  grid-area: siteIntro;
  margin-left: 20px;
}
.reptileInfoArea {
  grid-area: reptileInfo;
  margin-right: 10px;
}




/** ew, what is this **/
.checkFlex {
  display: flex;
}

.grid-1col {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 15px 20px;
}
.grid-2col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 15px 20px;
}
.grid-3col {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 15px 20px;
}

/** General Content Grid (1 h3 and 1 div) **/
.contentGrid {
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: auto;
  grid-template-areas:
    "contentHeader"
    "contentContainer";
  grid-gap: 10px 0;
}
.contentGrid > h3 {
  grid-area: contentHeader;
  margin: 0 10px;
  padding: 10px;
}
.contentGrid > div {
  grid-area: contentContainer;
  margin: 0 20px;
}
/** General List Grid (1 h3 and 1 ul)**/
.listGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto;
  grid-template-areas:
    "listTitle"
    "listItems";
  grid-gap: 15px 0;
  padding: 20px;
}
.listGrid > h3 {grid-area: listTitle;}
.listGrid > ul {grid-area: listItems;}
/** General Text Grid (1 h3 and 1+ p)**/
.textGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 15px 0;
  margin: 20px 0;
}
.textGrid > h3 {margin-left: 10px;}
.textGrid > p {}
/** Growth Grid (4xX) **/
.growthGrid {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-gap: 10px 0;
}
.submitMeasurementsButton {
  grid-column: 2 / 3;
}

/** Color Selections Flex **/
.colorFlex {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
}

/*********************************/
/* Tablet Layouts (Grids/Flexes) */
/*********************************/
@media screen and (max-width: 1300px) {
  html, body, main {
    width: 1000px; /* Tablet Resolution */
    min-height: 100vh;
  }
  .infoPageGrid {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4, auto);
    grid-template-areas:
      "measurements"
      "health"
      "morph"
      "mood";
  }
  .cagePageGrid {

    grid-template-columns: 1fr;
    grid-template-rows: repeat(3, auto);
    grid-template-areas:
      "cageDataEntry"
      "temperatureChart"
      "humidityChart";
}
}
@media screen and (max-width: 1000px) {
  html, body, main {
    width: 800px; /* Tablet Resolution */
    min-height: 100vh;
  }
}

/* Vertical/Horizontal Divider */
.divider {
  border-radius: 2px;
  background: #444;
  padding: 2px;
}
.v-divider {
  width: 2px;
  height: 90%;
}
.h-divider {
  height: 2px;
  width: 100%;
}

.hf-style {
  /* header-footer style */
  border-color: #ABC;
  border-style: solid;
  background: linear-gradient(180deg, #abc, #def);
}
/* Encasing navbar */
.navbar {
  position: sticky !important;
  top: 0;
  z-index: 1;
  padding: 0 !important;
  border-width: 0 2px 2px 2px;
  border-radius: 0 0 3px 3px;
}

/* Website Logo */
.navbar-header {
  background: linear-gradient(90deg, #dddffe, #fffcec);
  border-radius: 42% 50% 50% 42%;

  height: 85px;
  width: 125px;
  box-shadow: -2px -5px 10px #222 inset;

  position: relative;
}
.navbar-brand {
  text-decoration: none;
  font-family: 'Righteous', Arial, Verdana;
  font-size: 25px !important;
  color: #26cd2b;
  line-height: 24px !important;
  text-shadow: 1px 1px 3px #333;
  text-align: center;
  position: absolute;
  top: 50%;
  transform: translateY(-60%);
}
.navbar-brand:hover {
  color: #26cd2b;
}

/* Navigation */
.nav {
  height: 100%;
  margin-left: 10px;
}
.nav-item {
  width: 75px;

  background: radial-gradient(var(--lightA), var(--lightC));
  margin: 12px 12px;
  border-width: 2px 1px 1px 2px;
  border-style: inset;
  border-color: var(--primaryA);
  border-radius: 10%;
  box-shadow: inset 1px 1px 18px 1px var(--darkC);
  position: relative;
}
.nav-item:hover {
  background: radial-gradient(var(--lightA), var(--primaryB));
}
.nav-link {
  width: 100%;
  text-align: center;
  position: absolute;
  top: 50%;
  transform: translateY(-40%);
}
.navButtonText {
  color: #222;
  font-family: 'Righteous', Arial, Verdana;
}
.navButtonIcon {
  color: #222;
}

/* Home Page Banner */
.heroShot {
  width: 100%;
  height: 100%;
}

/* Nav Buttons */


/* Buttons */
.submitButton {
  cursor: pointer;
  white-space: nowrap;
  vertical-align: middle;
}

.headerButton {
  padding-top: 22px;
  text-decoration: none !important;
  color: #222 !important;
  text-align: center;
  font-size: 16px;
}

/* Page Text Entries */




/** Reptile Selection Icons **/
.selectName {
  background: linear-gradient(180deg, var(--lightD), var(--lightB));
  border-width: 1px 1px 1px 2px;
  border-style: solid;
  border-color: var(--lightD);
  border-radius: 0 0 5px 5px;
  width: 80px;
  margin-top: -4px;
  padding: 4px;
  font-family: Arial;
  text-align: center;
  box-shadow: inset 1px 0px 4px 2px var(--darkD);
  pointer-events: none;
  text-transform: capitalize;
}
.selectImage {
  width: 80px;
  height: 80px;
  border-color: var(--lightD);
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px 5px 0 0;
  box-shadow: inset 1px 1px 4px 2px var(--darkD);
}
.reptiSelectFlex li:hover *{border-color: var(--darkA);}
.selectedReptile * {border-color: var(--primaryA);}

/** Morph Color Options (generated in infoScripts.js) **/
.cBoxContainer {
  position: relative;
  margin: 10px;
  width: 50px;
  height: 60px;
}
.cBoxText {
  font-family: 'Righteous';
  color: #222;
  text-align: center;
  display: none;
  text-transform: capitalize;
}
.cBoxInput {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
}
.cBoxBG {
  position: absolute;
  top: 21px;
  left: 0;
  width: 50px;
  height: 50px;
  border-radius: 5px;
  border: solid #333;
  border-width: 1px 3px 3px 1px;
  box-shadow: 2px 2px 3px 0px #666;
}
.cBoxContainer .cBoxInput:checked ~ .cBoxBG {
  box-shadow: inset 0px 0px 10px 3px #222;
  border: solid #333;
  border-width: 3px 1px 1px 3px;
}
.cBoxContainer:hover .cBoxInput ~ .cBoxBG {
  border: 2px solid orange;
  box-shadow: inset 0px 0px 10px 5px #555;
}
.cBoxContainer:hover .cBoxText {
  display: block;
}
.cBoxContainer .cBoxInput:checked ~ .cBoxText {
  display: block;
}
/* Create the checkmark/indicator (hidden when not checked) */
.cBoxBG:after {
  content: "";
  position: absolute;
  display: none;
}
/* Show the check when checked */
.cBoxContainer .cBoxInput:checked ~ .cBoxBG:after {
  display: block;
}
/* Style the checkbox/indicator */
.cBoxContainer .cBoxBG:after {
  left: 15px;
  top: 8px;
  width: 10px;
  height: 20px;
  border: solid #2F2;
  border-width: 0 5px 5px 0;
  border-radius: 0 0 4px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}





/**TOOL CLASSES**/
/**************/
/* Animations */
/**************/
.hoverItem:hover {animation: hoverOver 0.3s linear forwards;}
.clickItem:active {animation: iveBeenClicked 0.5s linear forwards;}
@keyframes hoverOver {
  50% {
    transform: scale(1.05);
  }
}
@keyframes iveBeenClicked {
  50% {
    transform: scale(0.95);
  }
}

/****************/
/* Button Types */
/****************/
.buttonTypeA {
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  border-color: var(--darkA);
  box-shadow: 1px 1px 2px 1px var(--darkC);
  font-family: 'Righteous', Arial, Verdana;
  cursor: pointer;
}
.buttonTypeB {}
.buttonTypeC {}

/******************/
/* Color Stylings */
/******************/
.headerGradient {
  background: linear-gradient(170deg, var(--darkD), var(--lightA));
}
.footerGradient {
  background: linear-gradient(10deg, var(--darkD), var(--lightA));
}
.gradientA {
  background: linear-gradient(-45deg, var(--lightB), var(--darkB));
}
.gradientB {
  background: radial-gradient(var(--primaryC), var(--lightD));
}
.gradientC {
  background: linear-gradient(45deg, var(--lightB), var(--lightC));
}
.solidColorA {
  background: var(--darkD);
}
.solidColorB {
  background: var(--lightA);
}
.solidColorC {
  background: #F5F5F5;
  /*background: var(--primaryC);*/
}

/*************************/
/* Sizing (height/width) */
/*************************/
.width-25  {width: 25px;}
.width-50  {width: 50px;}
.width-75  {width: 75px;}
.width-100 {width: 100px;}
.width-150 {width: 150px;}
.width-200 {width: 200px;}
.width-300 {width: 300px;}
.width-400 {width: 400px;}
.width-500 {width: 500px;}
.width-600 {width: 600px;}
.width-700 {width: 700px;}
.width-800 {width: 800px;}
.width-min {width: auto;}

/****************************/
/* Spacing (margin/padding) */
/****************************/
/* Bottom Margins */
.smBotMarg {
  margin-bottom: 10px;
}
.medBotMarg {
  margin-bottom: 20px;
}
.bigBotMarg {
  margin-bottom: 30px;
}
/* Even Paddings */
.smEvenPad {
  padding: 10px;
}
.medEvenPad {
  padding: 20px;
}
.bigEvenPad {
  padding: 30px;
}

/****************/
/* Text Sylings */
/****************/
.fancyText {
  font-family: 'Righteous', Arial, Verdana;
}
.basicText {
  font-family: Arial, Verdana;
}
.standardText {
  font-family: Arial, Verdana;
  line-height: 30px;
  font-weight: 500;
}
.textEffectA {
  color: var(--darkA);
  text-shadow: 2px 2px 4px var(--darkD);
  text-decoration: underline;
}
.textEffectB {
  color: var(--primaryB);
  text-shadow: 1px 1px 0px var(--darkD);
  text-decoration: none;
}
.textEffectC {
  color: var(--textA);
  text-shadow: 2px 2px 1px #BBB;
  text-decoration: none;
}
.h1Size {
  font-size: 28px;
}
.h2Size {
  font-size: 24px;
}
.h3Size {
  font-size: 22px;
}
.h4Size {
  font-size: 20px;
}
.h5Size {
  font-size: 18px;
}
.h5Size {
  font-size: 16px;
}

/*******************/
/* Border Stylings */
/*******************/
.borderA {
  border-style: solid;
  border-width: 1px 1px 2px 2px;
  border-radius: 5px;
  border-color: var(--darkB);
  box-shadow: 2px 2px 4px 1px var(--darkD);
}
.borderB {
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  border-color: var(--darkA);
  box-shadow: 1px 1px 2px 1px var(--darkC);
}
.borderC {
  /* Good for labeled text entries */
  border-width: 2px 1px 1px 2px;
  border-style: solid;
  border-color: var(--darkB);
  border-radius: 15px 5px 5px 15px;
  box-shadow: 1px 1px 2px 1px var(--darkB);
}
.borderD {
  /*  */
  border-style: solid;
  border-width: 1px 1px 2px 2px;
  border-radius: 10px;
  border-color: var(--darkB);
  box-shadow: 2px 2px 4px 1px var(--darkD);
}
.borderE {
  /* Good for encasing page elements */
  border-color: var(--primaryB);
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  box-shadow: inset 0 0 8px 1px var(--darkD);
}
/* Note: Make sure these are below the border definitions */
.topEdgeBorder {
  border-width: 0 1px 1px 2px;
  border-radius: 0 0 5px 5px;
}
.bottomEdgeBorder {
  border-width: 2px 1px 0 2px;
  border-radius: 5px 5px 0 0;
}

/***************************/
/* Single Property Classes */
/***************************/
.hidden { display: none !important; }
.noBullets { list-style-type: none; }
.turn90 { transform: rotate(90deg); }
.turn270 { transform: rotate(270deg); }
.centered {text-align: center; }
.lefted { text-align: left; }
.righted { text-align: right; }
.innerShadow { box-shadow: inset 0 0 8px 1px var(--darkD); }
.tuchit { cursor: pointer; }




/*
  Refreshing memory with new stuff down here
*/


.itemHeader {
  font-family: Righteous;
  font-size: 22px;
}
.itemText {
  font-family: Righteous;
  font-size: 20px;
}

.intro {
  background: var(--lightA);
  border-radius: 5px;
  border: 2px solid #999;
  border-width: 1px 2px 2px 1px;
  margin-left: 40px;
}
.introHeader {
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: #222;
  background: linear-gradient(180deg, #DDD, #DDD, #CDE);
}

.introExplain {}

.section {
  display: grid;
  grid-template-rows: 50px auto;
  grid-template-columns: 50px auto;
  grid-template-areas: "icon desc"
                        ". content";
}
.sectionIcon {
  grid-area: icon;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 2px solid #222;
  background: linear-gradient(180deg, #DDD, #DDD, #CDE);
  padding-top: 6px;
  text-align: center;
}
.sectionHeader {
  grid-area: desc;
  margin-top: 5px;
  margin-left: -10px;
  height: 40px;
  padding: 0 5px 5px 10px;
  border-radius: 0 5px 0 0;
  border: 2px solid #222;
  border-left: none;
  background: linear-gradient(180deg, #DDD, #DDD, #CDE);
}
.sectionContent {
  grid-area: content;
  z-index: 0;
  margin-top: -6px;
  margin-left: -10px;
  background: var(--lightA);
  border-radius: 0 0 5px 5px;
  border: 2px solid #222;
  border-width: 0 2px 2px 2px;
}

.graph {

  background: var(--lightA);
  border-radius: 5px;
  border: 2px solid #999;
  border-width: 1px 2px 2px 1px;
}
.graphHeader {
  background: linear-gradient(180deg, #DDD, #DDD, #CDE);
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: #222;
}

.graphInterface {

}





.acctPre {
  width: 150px;
  justify-content: end;
}
