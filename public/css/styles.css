/* Define Color Palette */
:root {--primaryA: rgb(4,   187, 28);
  --primaryB: rgb(233, 200, 12);
  --primaryC: rgb(237, 237, 228);
  --lightA: rgb(232, 235, 236);
  --lightB: rgb(208, 215, 217);
  --lightC: rgb(197, 207, 198);
  --lightD: rgb(197, 227, 253);
  --darkA: rgb(248, 168, 3);
  --darkB: rgb(81,  84,  96);
  --darkC: rgb(3,   5,   86);
  --darkD: rgb(30,  35,  40);
  --textA: rgb(79,119,153);
  --textB: rgb(100, 30, 55);
  --textC: rgb(200, 200, 100);
}
/* Remove pre-existing margins/padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Fit the page to the screen */
html, body, main {
  width: 1300px; /* Desktop Resolution */
  min-height: 100vh;
  background: var(--darkD);
  margin: 0 auto;
}




/**************************/
/* Layouts (Grids/Flexes) */
/**************************/
/** Website's General Layout **/
.siteGrid {
  display: grid;
  grid-gap: 15px 15px;
  /* TODO: make the footer row auto once it has stuff in it */
  grid-template-rows: auto 1fr 50px;
  grid-template-columns: 75px 1fr;
  grid-template-areas:
    "header header"
    "nav    page  "
    "footer footer";
}
.header {
  grid-area: header;
  margin: 0 5px;
}
.nav {
  grid-area: nav;
  margin-left: 10px;
}
.page {
  grid-area: page;
  margin-right: 10px;
}
.footer {
  grid-area: footer;
  margin: 0 5px;
}

/** Header Layout **/
.headerGrid {
  display: grid;
  grid-template-columns: auto 1fr auto auto;
  grid-template-rows: auto;
  grid-template-areas:
    "logo . login signup";
  padding: 10px;
}
.siteLogo {grid-area: logo;}
.loginForm {grid-area: login;}
.signUpButton {
  grid-area: signup;
  margin-left: 10px;
}

/** Login Form Layout **/
.loginGrid {
  display: grid;
  grid-template-columns: repeat(2, auto);
  grid-template-rows: repeat(2, 50%);
  grid-template-areas:
    "username loginButton"
    "password loginButton";
  grid-gap: 0 10px;
}
.usernameEntry {
  grid-area: username;
  margin-bottom: 2px;
  padding-left: 5px;
}
.passwordEntry {
  grid-area: password;
  margin-top: 2px;
  padding-left: 5px;
}
.loginButton {grid-area: loginButton;}

/** Home Page Layout **/
.homePageGrid {
  display: grid;
  grid-template-columns: 800px 1fr;
  grid-template-rows: 500px 1fr;
  grid-template-areas:
    "heroShot heroShot"
    "siteIntro reptileInfo";
  padding: 10px;
  grid-gap: 20px;
}
.heroShotArea {grid-area: heroShot;}
.siteIntroArea {
  grid-area: siteIntro;
  margin-left: 20px;
}
.reptileInfoArea {
  grid-area: reptileInfo;
  margin-right: 10px;
}

/** Info Page Layout **/
.infoPageGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: repeat(2, auto);
  grid-template-areas:
    "measurements health"
    "morph        mood";
  grid-gap: 30px 30px;
  padding: 10px 10px 30px 10px;
  align-items: start;
}
.measurementArea {
  grid-area: measurements;
}
.healthArea {
  grid-area: health;
}
.moodArea {
  grid-area: mood;
}
.morphArea {
  grid-area: morph;
}

/** Cage Page Layout **/
.cagePageGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: repeat(2, auto);
  grid-template-areas:
    "cageDataEntry    cageDataEntry"
    "temperatureChart humidityChart";
  grid-gap: 30px 30px;
  padding: 10px 10px 30px 10px;
}
.cageDataEntryArea {grid-area: cageDataEntry;}
.tempChartArea {grid-area: temperatureChart;}
.humidChartArea {grid-area: humidityChart;}

/** General Content Grid (1 h3 and 1 div) **/
.contentGrid {
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: auto;
  grid-template-areas:
    "contentHeader"
    "contentContainer";
  grid-gap: 10px 0;
}
.contentGrid > h3 {
  grid-area: contentHeader;
  margin: 0 10px;
  padding: 10px;
}
.contentGrid > div {
  grid-area: contentContainer;
  margin: 0 20px;
}
/** General List Grid (1 h3 and 1 ul)**/
.listGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto;
  grid-template-areas:
    "listTitle"
    "listItems";
  grid-gap: 15px 0;
  padding: 20px;
}
.listGrid > h3 {grid-area: listTitle;}
.listGrid > ul {grid-area: listItems;}
/** General Text Grid (1 h3 and 1+ p)**/
.textGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 15px 0;
  margin: 20px 0;
}
.textGrid > h3 {margin-left: 10px;}
.textGrid > p {}
/** Growth Grid (4xX) **/
.growthGrid {
  display: grid;
  grid-template-columns: auto 80px 1fr 80px;
  grid-gap: 10px;
}
.submitMeasurementsButton {
  grid-column: 4 / 5;
}

/** Color Selections Flex **/
.colorFlex {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
}

/** Reptile Selection Layout **/
.reptiSelectFlex {
  display: flex;
  flex-flow: row nowrap;
}
.reptiSelectFlex > * {padding: 10px 20px 5px 5px;}
.reptileChoiceArea {
  padding: 10px;
  margin: 15px 15px 10px 15px;
}



/************************/
/* Item Specific Styles */
/************************/
/* Website Logo */
.siteLogo {
  background: linear-gradient(0deg, var(--darkD), var(--darkD), var(--darkB), var(--darkD));
  font-family: 'Righteous';
  color: var(--primaryA);
  text-decoration: underline var(--primaryB);
  text-shadow: -1px 2px 1px var(--primaryB);
  border-radius: 5px 20px;
  border: 1px ridge var(--darkA);
  padding: 10px 20px 5px 20px;
  pointer-events: none;
}

/* Home Page Banner */
.heroShot {
  object-fit: cover;
  object-position: 0 -50px;
  width: 100%;
  height: 100%;
  border: 2px ridge var(--darkB);
  border-radius: 2px;
}

/* Nav Buttons */
.navList {
  /* Keep the nav in view on scrolling down */
  position: sticky;
  top: 10px;
}
.navButtonText {
  /* Hide the button text while not hovered */
  display: none;
  width: 100%;
  height: 100%;
  text-decoration: none;
  padding-top: 13px;
  color: #222;
  font-weight: bold;
  text-shadow: 1px 1px 5px #DDD;
}
.navButtonIcon {
  padding-top: 13px;
}
.activePageButton {
  text-align: center;
  font-size: 110%;
  width: 75px;
  padding: 12px 0;
  margin: 0 0 10px 0;
}
.activePageButton .navButtonIcon {display: none;}
.activePageButton .navButtonText {display: block;}
.navButton {
  text-align: center;
  height: 50px;
  width: 50px;
}
.navButton:hover {
  /* Grow the navButton to show text */
  font-size: 110%;
  transition: 0.2s;
  width: 75px;
  background: radial-gradient(var(--lightB), var(--darkB));
}
.navButton:hover .navButtonText {
  /* Show the button text while hovered */
  display: block;
}
.navButton:hover .navButtonIcon {
  /* Hide the button icon while hovered */
  display: none;
}

/* Buttons */
.submitButton {
  height: 30px;
  width: 90px;
  vertical-align: middle;
  cursor: pointer;
}
.signUpButton {
  padding-top: 22px;
  text-decoration: none;
  color: #222;
  text-align: center;
  font-size: 16px;
}
.loginButton {
  font-size: 16px;
  cursor: pointer;
}

/* Page Text Entries */
.entryIcon {
  height: 30px;
  width: 33px;
  vertical-align: middle;

  border-width: 2px 0px 1px 2px;
  border-style: solid;
  border-color: var(--darkB);
  box-shadow: 1px 1px 2px 1px var(--darkB);

  border-radius: 50% 0 0 50%;

  padding: 5px 0 0 7px;
  margin: -3px -4px 0 0;
}
.entryIcon#snowIcon {background: #ABF;}
.entryIcon#flameIcon {background: #FBA;}
.entryIcon#cloudIcon {background: #BFA;}
.chartEntry {
  width: 150px;
  height: 30px;
  margin: 10px 15px 0 0;
  padding: 5px;
}

/** Reptile Selection Icons **/
.selectName {
  background: linear-gradient(180deg, var(--lightD), var(--lightB));
  border-width: 1px 1px 1px 2px;
  border-style: solid;
  border-color: var(--lightD);
  border-radius: 0 0 5px 5px;
  width: 80px;
  margin-top: -4px;
  padding: 4px;
  font-family: Arial;
  text-align: center;
  box-shadow: inset 1px 0px 4px 2px var(--darkD);
  pointer-events: none;
}
.selectImage {
  width: 80px;
  height: 80px;
  border-color: var(--lightD);
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px 5px 0 0;
  box-shadow: inset 1px 1px 4px 2px var(--darkD);
}
.reptiSelectFlex li:hover *{border-color: var(--darkA);}

/* Miscellaneous */
.rowLabel {text-align: right;}
.colLabel {text-align: center;}
.colorCBox {

}

/** Morph Color Options (generated in infoScripts.js) **/
.cBoxContainer {
  position: relative;
  cursor: pointer;
  margin: 5px;
  width: 50px;
  height: 60px;
}
.cBoxText {
  font-family: 'Righteous';
  text-align: center;
  display: none;
}
.cBoxInput {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
}
.cBoxBG {
  position: absolute;
  top: 20px;
  left: 0;
  width: 50px;
  height: 50px;
  border-radius: 5px;
  border: 2px solid #333;
}
.cBoxContainer .cBoxInput:checked ~ .cBoxBG {
  box-shadow: inset 0px 0px 10px 3px #4F4;
}
.cBoxContainer:hover .cBoxInput ~ .cBoxBG {
  border: 2px solid orange;
  box-shadow: inset 0px 0px 10px 5px #555;
}
.cBoxContainer:hover .cBoxText {
  display: block;
}

/* Create the checkmark/indicator (hidden when not checked) */
.cBoxBG:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the check when checked */
.cBoxContainer .cBoxInput:checked ~ .cBoxBG:after {
  display: block;
}

/* Style the checkbox/indicator */
.cBoxContainer .cBoxBG:after {
  left: 18px;
  top: 14px;
  width: 5px;
  height: 10px;
  border: solid #229;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}





/**TOOL CLASSES**/
/**************/
/* Animations */
/**************/
.hoverItem:hover {animation: hoverOver 0.3s linear forwards;}
.clickItem:active {animation: iveBeenClicked 0.5s linear forwards;}
@keyframes hoverOver {
  50% {
    transform: scale(1.05);
  }
}
@keyframes iveBeenClicked {
  50% {
    transform: scale(0.95);
  }
}

/****************/
/* Button Types */
/****************/
.buttonTypeA {
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  border-color: var(--darkA);
  box-shadow: 1px 1px 2px 1px var(--darkC);
  font-family: 'Righteous', Arial, Verdana;
}
.buttonTypeB {}
.buttonTypeC {}

/******************/
/* Color Stylings */
/******************/
.headerGradient {
  background: linear-gradient(170deg, var(--darkD), var(--lightA));
}
.footerGradient {
  background: linear-gradient(10deg, var(--darkD), var(--lightA));
}
.gradientA {
  background: linear-gradient(-45deg, var(--lightB), var(--darkB));
}
.gradientB {
  background: radial-gradient(var(--primaryC), var(--lightD));
}
.gradientC {
  background: linear-gradient(45deg, var(--lightB), var(--lightC));
}
.solidColorA {
  background: var(--darkD);
}
.solidColorB {
  background: var(--lightA);
}
.solidColorC {
  background: var(--primaryC);
}

/*************************/
/* Sizing (height/width) */
/*************************/
.w-25  {width: 25px;}
.w-50  {width: 50px;}
.w-75  {width: 75px;}
.w-100 {width: 100px;}
.w-200 {width: 200px;}
.w-300 {width: 300px;}
.w-400 {width: 400px;}
.w-500 {width: 500px;}
.w-600 {width: 600px;}
.w-700 {width: 700px;}
.w-800 {width: 800px;}

/****************************/
/* Spacing (margin/padding) */
/****************************/
/* Bottom Margins */
.smBotMarg {
  margin-bottom: 10px;
}
.medBotMarg {
  margin-bottom: 20px;
}
.bigBotMarg {
  margin-bottom: 30px;
}
/* Even Paddings */
.smEvenPad {
  padding: 10px;
}
.medEvenPad {
  padding: 20px;
}
.bigEvenPad {
  padding: 30px;
}

/****************/
/* Text Sylings */
/****************/
.fancyText {
  font-family: 'Righteous', Arial, Verdana;
}
.standardText {
  font-family: Arial, Verdana;
  line-height: 30px;
  font-weight: 500;
}
.textEffectA {
  color: var(--darkA);
  text-shadow: 2px 2px 4px var(--darkD);
  text-decoration: underline;
}
.textEffectB {
  color: var(--primaryB);
  text-shadow: 1px 1px 0px var(--darkD);
  text-decoration: none;
}
.textEffectC {
  color: var(--textA);
  text-shadow: 2px 2px 1px #BBB;
  text-decoration: none;
}
.h1Size {
  font-size: 28px;
}
.h2Size {
  font-size: 24px;
}
.h3Size {
  font-size: 22px;
}
.h4Size {
  font-size: 20px;
}

/*******************/
/* Border Stylings */
/*******************/
.borderA {
  border-style: solid;
  border-width: 2px 2px 3px 3px;
  border-radius: 5px;
  border-color: var(--darkB);
  box-shadow: 2px 2px 4px 1px var(--darkD);
}
.borderB {
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  border-color: var(--darkA);
  box-shadow: 1px 1px 2px 1px var(--darkC);
}
.borderC {
  /* Good for text entries */
  border-width: 2px 1px 1px 2px;
  border-style: solid;
  border-color: var(--darkB);
  border-radius: 0 5px 5px 0;
  box-shadow: 1px 1px 2px 1px var(--darkB);
}
.borderD {
  /*  */
  border-style: solid;
  border-width: 2px 2px 3px 3px;
  border-radius: 10px;
  border-color: var(--darkB);
  box-shadow: 2px 2px 4px 1px var(--darkD);
}
.borderE {
  /* Good for encasing page elements */
  border-color: var(--primaryB);
  border-style: solid;
  border-width: 2px 1px 1px 2px;
  border-radius: 5px;
  box-shadow: inset 0 0 8px 1px var(--darkD);
}
/* Note: Make sure these are below the border definitions */
.topEdgeBorder {
  border-width: 0 1px 1px 2px;
  border-radius: 0 0 5px 5px;
}
.bottomEdgeBorder {
  border-width: 2px 1px 0 2px;
  border-radius: 5px 5px 0 0;
}

/***************************/
/* Single Property Classes */
/***************************/
.hidden {display: none;}
.noBullets {list-style-type: none;}
.turn90 {transform: rotate(90deg);}
.centered {text-align: center;}
.innerShadow {box-shadow: inset 0 0 8px 1px var(--darkD);}
