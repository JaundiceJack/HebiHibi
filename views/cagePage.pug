extends default

block content

	// Include the reptile selections
	include reptiSelect.pug
	
	div#cagePage.cagePageGrid
		// Enclosure Data Entry Area
		div.cageDataEntryArea.contentGrid
			h3.fancyText.h3Size.textEffectC.borderA.gradientC Enter Enclosure Conditions:
			div.borderD.solidColorC.p-3
				p.standardText Select the reptile you want to track above, then enter the current enclosure conditions below.
				p.standardText Once submitted, the data will be charted.
				hr
				form(action="/monitoring/cage/"+selected._id, method="post").startFlex
					div.entryArea.borderC.solidColorB.mb-2
						label.entryIcon Date
						input.entryInput(type='date' name="date" min="2019-01-01") 
					div.entryArea.borderC.entryColorA.mb-2
						i.entryIcon.far.fa-snowflake
						input.entryInput(type="text" name="coolSide" placeholder="Cool Side F°" required autofocus)
					div.entryArea.borderC.entryColorB.mb-2
						i.entryIcon.fab.fa-gripfire
						input.entryInput(type="text" name="warmSide" placeholder="Warm Side F°" required)
					div.entryArea.borderC.entryColorC.mb-2
						i.entryIcon.fas.fa-cloud
						input.entryInput(type="text" name="humidity" placeholder="Humidity %" required)
					button(type="submit").submitButton.buttonTypeA.gradientB.hoverItem.clickItem.p-2
						label Chart It
						i.fas.fa-share.turn90.ml-1

					br

		// Enclosure Data Charts Area
		// Temperature
		div.tempChartArea.contentGrid
			// I've been trying to pass in the data to pug by interpolation, but I think thats the wrong way to do it
				I think instead, If i used AJAX to issue a get request from the javascript, I could handle getting it 
				in a separate route in monitoring.
			h3.fancyText.h4Size.textEffectC.borderA.gradientC Temperatures:
			div.borderA
				canvas#temperatureChart.temperatureChart.w-100.h-100(data-id=selected._id)
		// Humidity
		div.humidChartArea.contentGrid
			h3.fancyText.h4Size.textEffectC.borderA.gradientC Humidity:
			div.borderA
				canvas#humidityChart.humidityChart.w-100.h-100(data-id=selected._id)
